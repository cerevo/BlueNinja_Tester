/**
 * @file usbstack.h
 * @brief a header file for TZ10xx USB Stack core if
 * @version V0.0
 * @date $Date:: 2014-09-19 18:45:09 +0900 #$
 * @note
 */

/*
 * COPYRIGHT (C) 2014
 * TOSHIBA CORPORATION SEMICONDUCTOR & STORAGE PRODUCTS COMPANY
 * ALL RIGHTS RESERVED
 *
 * THE SOURCE CODE AND ITS RELATED DOCUMENTATION IS PROVIDED "AS IS". TOSHIBA
 * CORPORATION MAKES NO OTHER WARRANTY OF ANY KIND, WHETHER EXPRESS, IMPLIED OR,
 * STATUTORY AND DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF MERCHANTABILITY,
 * SATISFACTORY QUALITY, NON INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.
 * 
 * THE SOURCE CODE AND DOCUMENTATION MAY INCLUDE ERRORS. TOSHIBA CORPORATION
 * RESERVES THE RIGHT TO INCORPORATE MODIFICATIONS TO THE SOURCE CODE IN LATER
 * REVISIONS OF IT, AND TO MAKE IMPROVEMENTS OR CHANGES IN THE DOCUMENTATION OR
 * THE PRODUCTS OR TECHNOLOGIES DESCRIBED THEREIN AT ANY TIME.
 * 
 * TOSHIBA CORPORATION SHALL NOT BE LIABLE FOR ANY DIRECT, INDIRECT OR
 * CONSEQUENTIAL DAMAGE OR LIABILITY ARISING FROM YOUR USE OF THE SOURCE CODE OR
 * ANY DOCUMENTATION, INCLUDING BUT NOT LIMITED TO, LOST REVENUES, DATA OR
 * PROFITS, DAMAGES OF ANY SPECIAL, INCIDENTAL OR CONSEQUENTIAL NATURE, PUNITIVE
 * DAMAGES, LOSS OF PROPERTY OR LOSS OF PROFITS ARISING OUT OF OR IN CONNECTION
 * WITH THIS AGREEMENT, OR BEING UNUSABLE, EVEN IF ADVISED OF THE POSSIBILITY OR
 * PROBABILITY OF SUCH DAMAGES AND WHETHER A CLAIM FOR SUCH DAMAGE IS BASED UPON
 * WARRANTY, CONTRACT, TORT, NEGLIGENCE OR OTHERWISE.
 */

#ifndef USB_STACK_H
#define USB_STACK_H

#include "gpio_wrapper.h"

/**
 * @brief status of executed operation
 */
typedef enum _USBS_STATUS {
	USBS_OK    = 0,  /**< Operation succeeded */
	USBS_ERROR ,     /**< Unspecified error */
	USBS_ERROR_BUSY  ,
	USBS_ERROR_PARAMETER,
	USBS_ERROR_TIMEOUT  ,
	USBS_ERROR_USB_STATE,
	USBS_ERROR_STATE,
} USBS_STATUS;

USBS_STATUS        USBS_Initialize    (TZ10XX_DRIVER_GPIO_WRAPPER* gpio);
USBS_STATUS        USBS_Uninitialize  (void);
USBS_STATUS        USBS_Connect       (void);
USBS_STATUS        USBS_Disconnect    (void);
USBS_STATUS        USBS_Thread        (void);
void               USBS_Configured    (uint8_t config, uint8_t alt);
void               USBS_Suspend       (bool enter);
bool               USBS_Lock(void);
bool               USBS_Unlock(void);

#endif /* USB_STACK_H */
